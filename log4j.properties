# define the root category and GatewayServer properties
# For PySpark applications it's better to keep these properties in sync for log consistency
#log4j.rootCategory=ERROR, console
log4j.rootCategory=ERROR, file
log4j.logger.org.apache.spark.api.python.PythonGatewayServer=INFO

# configure the format and output for the console appender
log4j.appender.console=org.apache.log4j.ConsoleAppender
log4j.appender.console.target=System.err
log4j.appender.console.layout=org.apache.log4j.PatternLayout
#log4j.appender.console.layout.ConversionPattern=[spark][%d{yyyy-MM-dd HH:mm:ss}][%p][%c][%m]%n
# %c shows fully qualified class name, %c{1} shows its last element
log4j.appender.console.layout.ConversionPattern=%d{yyyy/MM/dd HH:mm:ss} %p %c: %m%n
#log4j.appender.publicFile.layout.ConversionPattern=[spark][%p][%d{yy/MM/dd HH:mm:ss}][%c][%m]%n

# Set the default spark-shell/spark-sql log level to WARN. When running the
# spark-shell/spark-sql, the log level for these classes is used to overwrite
# the root logger's log level, so that the user can have different defaults
# for the shell and regular Spark apps.
log4j.logger.org.apache.spark.repl.Main=WARN
log4j.logger.org.apache.spark.sql.hive.thriftserver.SparkSQLCLIDriver=WARN

# Settings to quiet third party logs that are too verbose
log4j.logger.org.sparkproject.jetty=WARN
log4j.logger.org.sparkproject.jetty.util.component.AbstractLifeCycle=ERROR
log4j.logger.org.apache.spark.repl.SparkIMain$exprTyper=INFO
log4j.logger.org.apache.spark.repl.SparkILoop$SparkILoopInterpreter=INFO
log4j.logger.org.apache.parquet=ERROR
log4j.logger.parquet=ERROR

# SPARK-9183: Settings to avoid annoying messages when looking up nonexistent UDFs in SparkSQL with Hive support
log4j.logger.org.apache.hadoop.hive.metastore.RetryingHMSHandler=FATAL
log4j.logger.org.apache.hadoop.hive.ql.exec.FunctionRegistry=ERROR

#application log (name after .logger. is simply the name of the logger - usually fully qualified class name but it can be any custom name)
log4j.logger.__main__=INFO, console
log4j.additivity.__main__=false

log4j.logger.pyspark_logger=INFO, console
log4j.additivity.pyspark_logger=false



# suppress error when closing spark session (this error is meaningless)
log4j.logger.org.apache.spark.util.ShutdownHookManager=FATAL, console
log4j.additivity.org.apache.spark.util.ShutdownHookManager=false

#log4j.logger.org.apache.hadoop.io.nativeio.NativeIO=ERROR, console
#log4j.additivity.org.apache.hadoop.io.nativeio.NativeIO=false

#log4j.rootCategory=DEBUG, console
#log4j.appender.console=org.apache.log4j.ConsoleAppender
#log4j.appender.console.target=System.err
#log4j.appender.console.layout=org.apache.log4j.PatternLayout
#log4j.appender.console.layout.ConversionPattern=[spark][%d{yyyy-MM-dd HH:mm:ss}][%p][%c][%m]%n
#log4j.appender.publicFile.layout.ConversionPattern=[spark][%p][%d{yy/MM/dd HH:mm:ss}][%c][%m]%n








# Set everything to be logged to the console
#log4j.rootCategory=WARN, console

# define console appender
#log4j.appender.console=org.apache.log4j.ConsoleAppender
#log4j.appender.console.target=System.out
#log4j.appender.console.layout=org.apache.log4j.PatternLayout
#log4j.appender.console.layout.ConversionPattern=%d{yyyy/MM/dd HH:mm:ss} %p %c{1}: %m%n

#define rolling file appender
log4j.appender.file=org.apache.log4j.RollingFileAppender
#log4j.appender.file.File=${spark.yarn.app.container.log.dir}/${logfile.name}.log
log4j.appender.file.File=pyspark_explorer.log
#define following in Java System
# -Dlog4j.configuration=file:log4j.properties
# -Dlogfile.name=hello-spark
# -Dspark.yarn.app.container.log.dir=app-logs
log4j.appender.file.ImmediateFlush=true
log4j.appender.file.Append=false
log4j.appender.file.MaxFileSize=500MB
log4j.appender.file.MaxBackupIndex=2
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.conversionPattern=%d{yyyy/MM/dd HH:mm:ss} %p %c{1}: %m%n


# Recommendations from Spark template
#log4j.logger.org.apache.spark.repl.Main=WARN
#log4j.logger.org.spark_project.jetty=WARN
#log4j.logger.org.spark_project.jetty.util.component.AbstractLifeCycle=ERROR
#log4j.logger.org.apache.spark.repl.SparkIMain$exprTyper=INFO
#log4j.logger.org.apache.spark.repl.SparkILoop$SparkILoopInterpreter=INFO
#log4j.logger.org.apache.parquet=ERROR
#log4j.logger.parquet=ERROR
#log4j.logger.org.apache.hadoop.hive.metastore.RetryingHMSHandler=FATAL
#log4j.logger.org.apache.hadoop.hive.ql.exec.FunctionRegistry=ERROR

